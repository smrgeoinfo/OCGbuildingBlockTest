@prefix rdf:         <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:        <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh:          <http://www.w3.org/ns/shacl#> .
@prefix xsd:         <http://www.w3.org/2001/XMLSchema#> .
@prefix schema:      <http://schema.org/>.
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix cdifd: <https://cdif.org/validation/0.1/shacl#> .
@base <https://www.ogc.org/rules/template/> .

cdifd:CDIFVariableMeasuredShape
    a sh:NodeShape;
    sh:target [
	  a sh:SPARQLTarget ;
	  sh:prefixes (
         [ sh:prefix "schema" ; sh:namespace "http://schema.org/" ]
         [ sh:prefix "ex" ; sh:namespace "https://example.org/" ]
       );
      sh:select  """
      PREFIX schema: <http://schema.org/>
      SELECT DISTINCT ?this
        WHERE {
          ?this a schema:PropertyValue .
          FILTER (
            NOT EXISTS { ?s ?p ?this . }
            ||
            EXISTS { ?s schema:variableMeasured ?this . }
          )
        }""";
	] ;
	sh:property [
        sh:path schema:propertyID;
        sh:minCount 1 ;
        sh:or (
            [sh:nodeKind sh:IRI] 
            [sh:datatype xsd:string ;
               sh:minLength 5 ]
            [sh:class schema:DefinedTerm ;
              sh:property [
             	sh:path schema:identifier;
             	sh:minCount 1 ;
             	sh:or ( 
             	    [sh:nodeKind sh:IRI] 
                     [sh:datatype xsd:string ;
                             sh:minLength 5 ]
             	    [ sh:and (
             	      [sh:class schema:PropertyValue ]
                 	  [sh:or (
                             [sh:property [
                                 sh:path schema:value ;
                                 sh:minCount 1 ;
                                 sh:datatype xsd:string ;
                                 sh:message "a value for the identifier should be provided; can provide either full URI or identifier token part of URI if a url is provided."
                             ] ]
                             [sh:property [
                                 sh:path schema:url ;
                                 sh:minCount 1 ;
                                 sh:datatype xsd:string ;
                                 # sh:pattern "^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$";
                                 sh:pattern "^https?:\\/\\/[^\\s]+$" ;
                                 sh:message "value must be a resolvable URL, but we aren't testing to see if the URL resolves..... Can't get xsd:anyURI to work with JSON Schema validation..."]
                                 ] 
                             );
                            ]  # or
             	        )  # and
             	        ]);
             	    sh:message "a defined term should have an identifier that is a resolvable URI" ; 
             	    ];
                  ] # end defined term rule
        );
        sh:message "a propertID must be a uri reference, a name string, or a schema:DefinedTerm"; 
     ]; # end propertyID rule
        	
    sh:property cdifd:name3Property;
    sh:property [
       sh:path schema:description;
       sh:datatype xsd:string ;
        sh:minLength 10;
        sh:severity sh:info;
        sh:mincount 1;
        sh:message "a variableMeasured should have a text description explaining the variable"
    ]
  .
  
cdifd:name3Property
# names must be a literal, .
    a sh:PropertyShape ;
    sh:path schema:name;
	sh:minCount 1 ;
    sh:datatype xsd:string ;
	sh:minLength 5 ;
	# sh:severity sh:Warning ;
    sh:message "a name for the variable must be provided, and have a length of at least 5 characters." 
    .

