@prefix rdf:         <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:        <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh:          <http://www.w3.org/ns/shacl#> .
@prefix xsd:         <http://www.w3.org/2001/XMLSchema#> .
@prefix schema:      <http://schema.org/>.
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix cdifd: <https://cdif.org/validation/0.1/shacl#> .
@base <https://www.ogc.org/rules/template/> .



cdifd:CDIFVariableMeasuredShape
    a sh:NodeShape;
#    sh:targetClass schema:PropertyValue ;
# select PropertyValue for Variable definition
    sh:target [
	  a sh:SPARQLTarget ;
	  sh:prefixes (
         [ sh:prefix "schema" ; sh:namespace "http://schema.org/" ]
         [ sh:prefix "ex" ; sh:namespace "https://example.org/" ]
       );
      sh:select  """
      PREFIX schema: <http://schema.org/>
      SELECT DISTINCT ?this
        WHERE {
        
          ?this a schema:PropertyValue .
          FILTER (
            NOT EXISTS { ?s ?p ?this . }
            ||
            EXISTS { ?s schema:variableMeasured ?this . }
          )
        }""";
	] ;

	sh:or (
		[sh:property [
			sh:path schema:propertyID;
			sh:minCount 1 ;
			sh:nodeKind sh:IRIOrLiteral ;
			# sh:severity sh:Info ;
			sh:message "a Variable should have an identifier that is a URI" ; 
			];
		]
		[sh:property cdifd:nameProperty ;]
		[sh:class schema:DefinedTerm]
	);
	sh:message "for variableMeasured property propertyValue must have a name, a propertID, or an a @id reference provided." 
    .
    
cdifd:nameProperty
# names must be a literal, .
    a sh:PropertyShape ;
    sh:path schema:name;
	sh:minCount 1 ;
    sh:datatype xsd:string ;
	sh:minLength 5 ;
	# sh:severity sh:Warning ;
    sh:message "a name for the variable must be provided, and have a length of at least 5 characters." 
    .
# copy from properties/definedTerm/rules.shacl.  Would be better to figure out how to use owl:imports   
cdifd:CDIFDefinedTermShape
    a sh:NodeShape ;
    sh:targetClass schema:DefinedTerm ;
	sh:or (
		[sh:property [
			sh:path schema:identifier;
			sh:minCount 1 ;
			sh:or ( [sh:nodeKind sh:IRIOrLiteral ]
			 [ 
			     sh:and (
			      [sh:class schema:PropertyValue ]
    			  [sh:or (
                        [sh:property [
                            sh:path schema:value ;
                            sh:minCount 1 ;
                            sh:datatype xsd:string ;
                            sh:message "a value for the identifier should be provided; can provide either full URI or identifier token part of URI if a url is provided."
                        ] ]
                        [sh:property [
                            sh:path schema:url ;
                            sh:minCount 1 ;
                            sh:datatype xsd:string ;
                            # sh:pattern "^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$";
                            sh:pattern "^https?:\\/\\/[^\\s]+$" ;
                            sh:message "value must be a resolvable URL, but we aren't testing to see if the URL resolves..... Can't get xsd:anyURI to work with JSON Schema validation..."]
                            ] 
                        );
                ]
			)]);
			sh:message "a defined term should have an identifier that is a resolvable URI" ; 
			];
		]
		[sh:property cdifd:termLabelProperty ;]
	);
	sh:message "A Term must have a name (label) or an identifier. It should have both!." 
	.

cdifd:termLabelProperty
# names must be a literal, .
    a sh:PropertyShape ;
    sh:path schema:name;
	sh:minCount 1 ;
    sh:datatype xsd:string ;
	sh:minLength 5 ;
	# sh:severity sh:Warning ;
    sh:message "a label (schema:name) for the term must be provided, and must have at least 5 characters" 
    .
    
cdifd:CDIFPropertyIdentifierShape
    a sh:NodeShape ;
    sh:targetClass schema:PropertyValue ;
# select PropertyValue for identifier definition
    sh:target [
	  a sh:SPARQLTarget ;
	  sh:prefixes (
         [ sh:prefix "schema" ; sh:namespace "http://schema.org/" ]
         [ sh:prefix "ex" ; sh:namespace "https://example.org/" ]
       );
      sh:select  """
      PREFIX schema: <http://schema.org/>
      SELECT DISTINCT ?this
        WHERE {
          ?this a schema:PropertyValue .
          FILTER (
            NOT EXISTS { ?s ?p ?this . }
            ||
            EXISTS { ?s schema:identifier ?this . }
          )
        }"""
	] ;    
    
    sh:or (
        [sh:property [
            sh:path schema:value ;
            sh:minCount 1 ;
            sh:datatype xsd:string ;
            sh:message "a value for the property identifier should be provided; can provide either full URI or identifier token part of URI if a url is provided."
        ] ]
        [sh:property [
            sh:path schema:url ;
            sh:minCount 1 ;
            sh:datatype xsd:string ;
            # sh:pattern "^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$";
            sh:pattern "^https?:\\/\\/[^\\s]+$" ;
            sh:message "value must be a resolvable URL, but we aren't testing to see if the URL resolves..... Can't get xsd:anyURI to work with JSON Schema validation..."]
            ] 
         [sh:property cdifd:nameProperty ;]
    );
    sh:message "For a variableMeasaured DefinedTerm identifier, must provide either a value or a url. The value can be either a full URI or identifier token part of URI if a url is provided. url value must be a resolvable URL that provides a description of the DefinedTerm."
     .