{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "title": "Optional properties for CDIF Discovery metadata schema, with schema: prefixes",
    "description": "Building block specifies properties for minimal CDIF schama.org discovery record",
    "properties": {
        "@id": {
            "type": "string",
            "description": "The URI for the resource should be the @id value for the root of the JSON instance document tree. Note that this identifier can be interpreted to identify the resource that is the subject of this metadata record, or the JSON-LD object that is the digital object containing the metadata information."
        },
        "@type": {
            "description": "a schema.org Class that specifies the expected information content for the metadata record. For CDIF, 'schema:Dataset' is required, but other possible values (e.g. CreativeWork, SoftwareApplication, Product, WebAPI) are sometimes included to enable the schema.org properties used to describe the resource without schema.org validation errors.",
            "type": "array",
            "items": {
                "type": "string",
                "enum": [
                    "schema:CreativeWork",
                    "schema:SoftwareApplication",
                    "schema:SoftwareSourceCode",
                    "schema:Product",
                    "schema:WebAPI",
                    "schema:Dataset",
                    "schema:DigitalDocument",
                    "schema:Collection",
                    "schema:ImageObject",
                    "schema:DataCatalog",
                    "schema:DefinedTermSet"
                ],
                "minItems": 1,
                "default": "schema:Dataset",
                "contains": {"const": "schema:Dataset"}
            }
        },
        "schema:name": {
            "type": "string",
            "description": "A descriptive name of a dataset (e.g., 'Snow depth in Northern Hemisphere'). The name should uniquely identify the described resource for human use, in the scope of the metadata catalog containing this metadata record."
        },
        "schema:identifier": {
            "description": "The primary identifier for the dataset; other identifiers should be listed in the sameAs field. Schema.org has three ways of encoding identifiers-- a text description, a URL, or by using the schema:PropertyValue field. The Science on Schema.org guidance strongly recommends using the PropertyValue approach. see https://github.com/ESIPFed/science-on-schema.org   .... Dataset.md#identifier.  Ideally, for any given data provided they would provide identifiers either all as strings or all as identifier_type.",
            "anyOf": [
                {"$ref": "#/$defs/Identifier"},
                {"type": "string"}
            ]
        },
        "schema:dateModified": {
            "type": "string",
            "description": "ISO8601 formatted date (and optional time if relevant) when Dataset was last updated"
        },
        "schema:conditionsOfAccess": {
            "description": "text statement of conditions for use and access; if an online resource documents the restrictions or a URI is used to identify the conditions, recommend using schema:CreativeWork to provide a label (name) and an identifier (URI or URL). ",
            "type": "array",
            "minItems": 0,
            "items": {
                "anyOf": [
                    {"type": "string"},
                    {
                        "type": "object",
                        "properties": {
                            "@id": {
                                "type": "string",
                                "description": "a reference to a resource defining conditions of Access"
                            }
                        }
                    },
                    {"$ref": "#/$defs/LabeledLink"}
                ]
            }
        },
        "schema:license": {
            "description": "legal statement of conditions for use and access; recommend using schema:CreativeWork to provide a label (name) for the license, and an identifier. Sources of license identifiers: https://opensource.org/licenses/, https://creativecommons.org/about/cclicenses/, https://spdx.org/licenses/, http://cor.esipfed.org/ont/earthcube/swl. If only a string is provided, it should be an identifier for the license, ideally a resolvable URI",
            "type": "array",
            "minItems": 0,
            "items": {
                "anyOf": [
                    {"type": "string"},
                    {
                        "type": "object",
                        "properties": {
                            "@id": {
                                "type": "string",
                                "description": "a reference to a license defintion"
                            }
                        }
                    },
                    {"$ref": "#/$defs/LabeledLink"}
                ]
            }
        },
        "schema:url": {
            "type": "string",
            "format": "uri",
            "description": "Web Location of a page describing the dataset (landing page), typically providing links or instructions to get the actual resource content; analogous to dcat:accessURL. If a direct link is available to get the data, put in distribution/contentUrl"
        },
        "schema:distribution": {
            "description": "specifies how to download the data in a specific format or access via a web API. This property describes where to get the data and in what format by using the schema:DataDownload type. If user must access data through a landing page, provide link to landing page in the 'url' property for the dataset",
            "type": "array",
            "items": {
                "anyOf": [
                    {"$ref": "#/$defs/DataDownload"},
                    {"$ref": "#/$defs/WebAPI"}
                ]
            }
        },
        "schema:subjectOf": {"$ref": "#/$defs/MetaMetadata"}
    },
    "allOf": [
        {
            "required": [
                "@id",
                "@type",
                "@context",
                "schema:name",
                "schema:identifier",
                "schema:dateModified",
                "schema:subjectOf"
            ]
        },
        {
            "anyOf": [
                {
                    "required": ["schema:license"]
                },
                {
                    "required": ["schema:conditionsOfAccess"]
                }
            ]
        },
        {
            "anyOf": [
                {
                    "required": ["schema:url"]
                },
                {
                    "required": ["schema:distribution"]
                }
            ]
        }
    ],
    "$defs": {
        "LabeledLink": {"$ref": "../labeledLink/labeledLinkSchema.json"},
        "Identifier": {"$ref": "../identifier/identifierSchema.json"},
        "DefinedTerm": {"$ref": "../definedTerm/definedTermSchema.json"},
        "DataDownload": {"$ref": "../dataDownload/dataDownloadSchema.json"},
        "WebAPI": {"$ref": "../webAPI/webAPISchema.json"},
        "MetaMetadata": {"$ref": "../metaMetadata/metaMetadataSchema.json"}
    }
}