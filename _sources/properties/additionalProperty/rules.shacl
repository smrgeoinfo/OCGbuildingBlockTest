@prefix rdf:         <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:        <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh:          <http://www.w3.org/ns/shacl#> .
@prefix xsd:         <http://www.w3.org/2001/XMLSchema#> .
@prefix schema:      <http://schema.org/>.
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix cdifd: <https://cdif.org/validation/0.1/shacl#> .
@base <https://www.ogc.org/rules/template/> .


cdifd:CDIFadditionalPropertyShape
    a sh:NodeShape ;
# select PropertyValue for additional Property definition; use to validate bb example.
    sh:target [
	  a sh:SPARQLTarget ;
	  sh:prefixes (
         [ sh:prefix "schema" ; sh:namespace "http://schema.org/" ]
       );
       
      #  modify query appropriately when this is a child of an additionalProperty .
      sh:select  """
      PREFIX schema: <http://schema.org/>
      SELECT DISTINCT ?this
        WHERE {
          ?this a schema:PropertyValue .
          FILTER (
            NOT EXISTS { ?s ?p ?this . }
          )
        }"""
	] ;    

#  condition when in an module as a additional property value
#            ||
#           EXISTS { ?s schema:additionalProperty ?this . }
    
    sh:property cdifd:additionalPropertyNameProperty ;
    sh:property [
        sh:path schema:value ;
        sh:minCount 1 ;
        sh:datatype xsd:string ;
        sh:message "a value for the additional property must be provided."
    ] ;
    
    sh:property [
        sh:path schema:url ;
        sh:minCount 0 ;
        sh:datatype xsd:string ;
        # sh:pattern "^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$";
        sh:pattern "^https?:\\/\\/[^\\s]+$" ;
        sh:message "a url for the additionalProperty is expected to be a resolvable HTTP URI, but we aren't testing to see if the URL resolves....";
        sh:severity sh:info;
        ]; 
        
     
    sh:property [
        sh:path schema:propertyID;
        sh:minCount 1 ;
        sh:or (
        	[sh:nodeKind sh:IRI] 
        	[sh:datatype xsd:string ;
               sh:minLength 5 ]
        	[sh:class schema:DefinedTerm ]
        )];
        sh:message "The propertyID identifies the kind of property represented by the variable. a propertyID must be a uri reference, a name string, or a schema:DefinedTerm"
        ;
		
    sh:message "the context of an identifier, the PropertyValue provides the identifeir value string-- either as a schema:value or a url. The value can be either a full URI or identifier token part of URI if a url is provided. url value must be a resolvable URI that identifies the resoruce."
     .
     
cdifd:additionalPropertyNameProperty
# names must be a literal, .
    a sh:PropertyShape ;
    sh:path schema:name;
	sh:minCount 1 ;
    sh:datatype xsd:string ;
	sh:minLength 5 ;
	# sh:severity sh:Warning ;
    sh:message "a name for the additional property must be provided, and have a lenght of at least 5 characters." 
    .
    
    
cdifd:CDIFAddPropertyTermShape
    a sh:NodeShape ;
    sh:target [
	  a sh:SPARQLTarget ;
	  sh:prefixes (
         [ sh:prefix "schema" ; sh:namespace "http://schema.org/" ]
       );
      sh:select  """
      PREFIX schema: <http://schema.org/>
      SELECT DISTINCT ?this
        WHERE {
          ?this a schema:DefinedTerm .
          FILTER (
            EXISTS { ?s schema:propertyID ?this . }
          )
        }""";
	] ;
	sh:property [
		sh:path schema:identifier;
		sh:minCount 1 ;
		sh:or ( 
		 [sh:nodeKind sh:Literal ]
		 [ 
		     sh:and (
		      [sh:class schema:PropertyValue ]
    		  [sh:or (
                    [sh:property [
                        sh:path schema:value ;
                        sh:minCount 1 ;
                        sh:datatype xsd:string ;
                        sh:message "a value for the identifier should be provided; can provide either full URI or identifier token part of URI if a url is provided."
                    ] ]
                    [sh:property [
                        sh:path schema:url ;
                        sh:minCount 1 ;
                        sh:datatype xsd:string ;
                        # sh:pattern "^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$";
                        sh:pattern "^https?:\\/\\/[^\\s]+$" ;
                        sh:message "value must be a resolvable URL, but we aren't testing to see if the URL resolves..... Can't get xsd:anyURI to work with JSON Schema validation..."]
                        ] 
                    );
            ]
		)]);
		sh:message "a defined term should have an identifier that is a resolvable URI" ; 
		];
	sh:message "A Term must have a name (label) or an identifier. It should have both!." 
	.


 