{
  "title": "Validation report for ogc.bbr.test.properties.metaMetadata - Meta Metadata",
  "bblockName": "Meta Metadata",
  "bblockId": "ogc.bbr.test.properties.metaMetadata",
  "generated": "2025-11-01T23:47:18.109897+00:00",
  "result": true,
  "items": [
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/properties/metaMetadata/tests/about-fail.json",
        "url": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/metaMetadata/tests/about-fail.json",
        "language": "json"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using about-fail.json from test resources"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "about-fail.jsonld",
              "isError": false,
              "message": "Output JSON-LD about-fail.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "about-fail.ttl",
              "size": 14,
              "isError": false,
              "message": "Output Turtle about-fail.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": false,
              "exception": "ValidationError",
              "errorMessage": "'schema:about' is a required property",
              "isError": true,
              "message": "ValidationError: 'schema:about' is a required property\n\nFailed validating 'required' in schema:\n    {'$defs': {'Identifier': {'$ref': 'https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/identifier/schema.yaml'},\n               'Organization': {'$ref': 'https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/organization/schema.yaml'},\n               'Person': {'$ref': 'https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/person/schema.yaml'}},\n     '$schema': 'https://json-schema.org/draft/2020-12/schema',\n     'description': 'see '\n                    'https://github.com/Cross-Domain-Interoperability-Framework/Discovery/issues/13 '\n                    'for discussion on how to make assertion about the '\n                    'sample registration and metadata distinct from '\n                    'statements about the physical object',\n     'properties': {'@id': {'description': 'identifier for the metadata '\n                                           'record',\n                            'type': 'string'},\n                    '@type': {'const': 'schema:Dataset', 'type': 'string'},\n                    'dcterms:conformsTo': {'items': {'properties': {'@id': {'description': 'uri '\n                                                                                           'for '\n                                                                                           'specifications '\n                                                                                           'that '\n                                                                                           'this '\n                                                                                           'metadata '\n                                                                                           'record '\n                                                                                           'conforms '\n                                                                                           'to. '\n                                                                                           'Minimimally '\n                                                                                           'should '\n                                                                                           'specify '\n                                                                                           'uri '\n                                                                                           'for '\n                                                                                           'CDIF '\n                                                                                           'discovery '\n                                                                                           'profile',\n                                                                            'type': 'string'}},\n                                                     'type': 'object'},\n                                           'type': 'array'},\n                    'schema:about': {'properties': {'@id': {'description': 'this '\n                                                                           'must '\n                                                                           'be '\n                                                                           'the '\n                                                                           \"'@id' \"\n                                                                           'value '\n                                                                           'of '\n                                                                           'the '\n                                                                           'node '\n                                                                           'containing '\n                                                                           'the '\n                                                                           'resource '\n                                                                           'description '\n                                                                           'metadata',\n                                                            'type': 'string'}},\n                                     'type': 'object'},\n                    'schema:includedInDataCatalog': {'description': 'identify '\n                                                                    'the '\n                                                                    'data '\n                                                                    'collection '\n                                                                    'or '\n                                                                    'repository '\n                                                                    'that '\n                                                                    'contains '\n                                                                    'the '\n                                                                    'described '\n                                                                    'dataset. '\n                                                                    'The '\n                                                                    'value '\n                                                                    'is '\n                                                                    'expected '\n                                                                    'to be '\n                                                                    'a '\n                                                                    'schema:DataCatalog',\n                                                     'properties': {'@id': {'description': 'identifier '\n                                                                                           'for '\n                                                                                           'the '\n                                                                                           'containing '\n                                                                                           'catalog '\n                                                                                           'or '\n                                                                                           'repository; '\n                                                                                           'example '\n                                                                                           'data '\n                                                                                           'at '\n                                                                                           'https://github.com/ESIPFed/science-on-schema.org/blob/develop/guides/Dataset.md#catalog '\n                                                                                           'puts '\n                                                                                           'identifier '\n                                                                                           'here',\n                                                                            'type': 'string'},\n                                                                    '@type': {'const': 'schema:DataCatalog',\n                                                                              'default': 'schema:DataCatalog',\n                                                                              'type': 'string'},\n                                                                    'schema:identifier': {'$ref': '#/$defs/Identifier',\n                                                                                          'description': 'identifier '\n                                                                                                         'for '\n                                                                                                         'the '\n                                                                                                         'collection '\n                                                                                                         'or '\n                                                                                                         'catalog; '\n                                                                                                         'use '\n                                                                                                         'identifier_type '\n                                                                                                         'to '\n                                                                                                         'provide '\n                                                                                                         'information '\n                                                                                                         'on '\n                                                                                                         'identifier '\n                                                                                                         'scheme '\n                                                                                                         'and '\n                                                                                                         'context '\n                                                                                                         'for '\n                                                                                                         'identifier'},\n                                                                    'schema:name': {'type': 'string'},\n                                                                    'schema:url': {'description': 'locator '\n                                                                                                  'to '\n                                                                                                  'access '\n                                                                                                  'a '\n                                                                                                  'landing '\n                                                                                                  'page '\n                                                                                                  'for '\n                                                                                                  'the '\n                                                                                                  'collection '\n                                                                                                  'or '\n                                                                                                  'catalog',\n                                                                                   'format': 'uri',\n                                                                                   'type': 'string'}},\n                                                     'type': 'object'},\n                    'schema:maintainer': {'anyOf': [{'$ref': '#/$defs/Person'},\n                                                    {'$ref': '#/$defs/Organization'}],\n                                          'description': 'iSamples '\n                                                         'Registrant. '\n                                                         'identification '\n                                                         'of the agent '\n                                                         'that registered '\n                                                         'the sample, with '\n                                                         'contact '\n                                                         'information. '\n                                                         'Should include '\n                                                         'person name and '\n                                                         'affiliation, or '\n                                                         'position name '\n                                                         'and affiliation, '\n                                                         'or just '\n                                                         'organization '\n                                                         'name. e-mail '\n                                                         'address is '\n                                                         'preferred '\n                                                         'contact '\n                                                         'information.'},\n                    'schema:sdDatePublished': {'description': 'date of '\n                                                              'most recent '\n                                                              'update to '\n                                                              'the '\n                                                              'metadata '\n                                                              'content, '\n                                                              'extends '\n                                                              'iSamples '\n                                                              'schema',\n                                               'type': 'string'}},\n     'required': ['schema:about', 'dcterms:conformsTo', '@id'],\n     'type': 'object',\n     'x-jsonld-prefixes': {'dcterms': 'http://purl.org/dc/terms/',\n                           'ex': 'https://example.org/',\n                           'schema': 'http://schema.org/',\n                           'xsd': 'http://www.w3.org/2001/XMLSchema#'}}\n\nOn instance:\n    {'@context': {'dcterms': 'http://purl.org/dc/terms/',\n                  'ex': 'https://example.org/',\n                  'schema': 'http://schema.org/',\n                  'xsd': 'http://www.w3.org/2001/XMLSchema#'},\n     '@id': 'ex:URIforMetadata3575',\n     '@type': 'schema:Dataset',\n     'dcterms:conformsTo': [{'@id': 'ex:cdif_SDO_profile_uri'}],\n     'schema:maintainer': {'@id': 'https://orcid.org/3333-4442-9456-9347',\n                           '@type': 'schema:Person',\n                           'schema:alternateName': 'Metadata curator',\n                           'schema:contactPoint': {'@type': 'schema:ContactPoint',\n                                                   'schema:email': 'goodgea@bwc.org'},\n                           'schema:identifier': {'@type': 'schema:PropertyValue',\n                                                 'schema:propertyID': 'https://registry.identifiers.org/registry/orcid',\n                                                 'schema:url': 'https://orcid.org/3333-4442-9456-9347'},\n                           'schema:name': 'Goodge, Alice'},\n     'schema:sdDatePublished': '2025-10-24'}"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/metaMetadata/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/metaMetadata/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/metaMetadata/rules.shacl",
              "focusNodes": {
                "cdifd:CDIFMetaMetadataShape": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/metaMetadata/rules.shacl:\n - Shape cdifd:CDIFMetaMetadataShape: *none*\n"
            },
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/person/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/person/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/person/rules.shacl",
              "focusNodes": {
                "cdifd:contactPointProperty/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFContactPointShape": {
                  "nodes": [
                    "<https://orcid.org/3333-4442-9456-9347>/schema1:contactPoint"
                  ]
                },
                "cdifd:CDIFPersonShape/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:contactPointProperty/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFPersonShape": {
                  "nodes": [
                    "<https://orcid.org/3333-4442-9456-9347>"
                  ]
                },
                "cdifd:affiliationProperty/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFPersonShape/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "cdifd:affiliationProperty/sh:or/rdf:first": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/person/rules.shacl:\n - Shape cdifd:contactPointProperty/sh:or/rdf:rest/rdf:first: *none*\n - Shape cdifd:CDIFContactPointShape: <https://orcid.org/3333-4442-9456-9347>/schema1:contactPoint\n - Shape cdifd:CDIFPersonShape/sh:or/rdf:first: *none*\n - Shape cdifd:contactPointProperty/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFPersonShape: <https://orcid.org/3333-4442-9456-9347>\n - Shape cdifd:affiliationProperty/sh:or/rdf:rest/rdf:first: *none*\n - Shape cdifd:CDIFPersonShape/sh:or/rdf:rest/rdf:first: *none*\n - Shape cdifd:affiliationProperty/sh:or/rdf:first: *none*\n"
            },
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/identifier/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/identifier/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/identifier/rules.shacl",
              "focusNodes": {
                "cdifd:CDIFIdentifierTypeTermShape/sh:property/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierShape/sh:property/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierTypeTermShape": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb20": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb10": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierShape/sh:or/rdf:first": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb22": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb11": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierShape": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb21": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierShape/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb23": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb25": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/identifier/rules.shacl:\n - Shape cdifd:CDIFIdentifierTypeTermShape/sh:property/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFIdentifierShape/sh:property/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFIdentifierTypeTermShape: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb20: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb10: *none*\n - Shape cdifd:CDIFIdentifierShape/sh:or/rdf:first: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb22: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb11: *none*\n - Shape cdifd:CDIFIdentifierShape: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb21: *none*\n - Shape cdifd:CDIFIdentifierShape/sh:or/rdf:rest/rdf:first: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb23: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb25: *none*\n"
            },
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/organization/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/organization/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/organization/rules.shacl",
              "focusNodes": {
                "cdifd:CDIFOrganizationShape/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFOrganizationShape/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFOrganizationShape": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/organization/rules.shacl:\n - Shape cdifd:CDIFOrganizationShape/sh:or/rdf:rest/rdf:first: *none*\n - Shape cdifd:CDIFOrganizationShape/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFOrganizationShape: *none*\n"
            },
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/definedTerm/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/definedTerm/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/definedTerm/rules.shacl",
              "focusNodes": {
                "_:n49180552c5ce47ca89f0d5d3f18f8969b7": {
                  "nodes": []
                },
                "_:n49180552c5ce47ca89f0d5d3f18f8969b4": {
                  "nodes": []
                },
                "cdifd:CDIFDefinedTermShape/sh:property/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFDefinedTermShape": {
                  "nodes": []
                },
                "_:n49180552c5ce47ca89f0d5d3f18f8969b6": {
                  "nodes": []
                },
                "_:n49180552c5ce47ca89f0d5d3f18f8969b5": {
                  "nodes": []
                },
                "_:n49180552c5ce47ca89f0d5d3f18f8969b9": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/definedTerm/rules.shacl:\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b7: *none*\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b4: *none*\n - Shape cdifd:CDIFDefinedTermShape/sh:property/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFDefinedTermShape: *none*\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b6: *none*\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b5: *none*\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b9: *none*\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "TEST_RESOURCE",
        "requireFail": true,
        "filename": "_sources/properties/metaMetadata/tests/conformsto-fail.json",
        "url": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/metaMetadata/tests/conformsto-fail.json",
        "language": "json"
      },
      "result": true,
      "sections": [
        {
          "name": "GENERAL",
          "title": "General",
          "entries": [
            {
              "op": "require-fail",
              "isError": false,
              "message": "Test was expected to fail and it did."
            }
          ]
        },
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using conformsto-fail.json from test resources"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "conformsto-fail.jsonld",
              "isError": false,
              "message": "Output JSON-LD conformsto-fail.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "conformsto-fail.ttl",
              "size": 23,
              "isError": false,
              "message": "Output Turtle conformsto-fail.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": false,
              "exception": "ValidationError",
              "errorMessage": "'dcterms:conformsTo' is a required property",
              "isError": true,
              "message": "ValidationError: 'dcterms:conformsTo' is a required property\n\nFailed validating 'required' in schema:\n    {'$defs': {'Identifier': {'$ref': 'https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/identifier/schema.yaml'},\n               'Organization': {'$ref': 'https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/organization/schema.yaml'},\n               'Person': {'$ref': 'https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/person/schema.yaml'}},\n     '$schema': 'https://json-schema.org/draft/2020-12/schema',\n     'description': 'see '\n                    'https://github.com/Cross-Domain-Interoperability-Framework/Discovery/issues/13 '\n                    'for discussion on how to make assertion about the '\n                    'sample registration and metadata distinct from '\n                    'statements about the physical object',\n     'properties': {'@id': {'description': 'identifier for the metadata '\n                                           'record',\n                            'type': 'string'},\n                    '@type': {'const': 'schema:Dataset', 'type': 'string'},\n                    'dcterms:conformsTo': {'items': {'properties': {'@id': {'description': 'uri '\n                                                                                           'for '\n                                                                                           'specifications '\n                                                                                           'that '\n                                                                                           'this '\n                                                                                           'metadata '\n                                                                                           'record '\n                                                                                           'conforms '\n                                                                                           'to. '\n                                                                                           'Minimimally '\n                                                                                           'should '\n                                                                                           'specify '\n                                                                                           'uri '\n                                                                                           'for '\n                                                                                           'CDIF '\n                                                                                           'discovery '\n                                                                                           'profile',\n                                                                            'type': 'string'}},\n                                                     'type': 'object'},\n                                           'type': 'array'},\n                    'schema:about': {'properties': {'@id': {'description': 'this '\n                                                                           'must '\n                                                                           'be '\n                                                                           'the '\n                                                                           \"'@id' \"\n                                                                           'value '\n                                                                           'of '\n                                                                           'the '\n                                                                           'node '\n                                                                           'containing '\n                                                                           'the '\n                                                                           'resource '\n                                                                           'description '\n                                                                           'metadata',\n                                                            'type': 'string'}},\n                                     'type': 'object'},\n                    'schema:includedInDataCatalog': {'description': 'identify '\n                                                                    'the '\n                                                                    'data '\n                                                                    'collection '\n                                                                    'or '\n                                                                    'repository '\n                                                                    'that '\n                                                                    'contains '\n                                                                    'the '\n                                                                    'described '\n                                                                    'dataset. '\n                                                                    'The '\n                                                                    'value '\n                                                                    'is '\n                                                                    'expected '\n                                                                    'to be '\n                                                                    'a '\n                                                                    'schema:DataCatalog',\n                                                     'properties': {'@id': {'description': 'identifier '\n                                                                                           'for '\n                                                                                           'the '\n                                                                                           'containing '\n                                                                                           'catalog '\n                                                                                           'or '\n                                                                                           'repository; '\n                                                                                           'example '\n                                                                                           'data '\n                                                                                           'at '\n                                                                                           'https://github.com/ESIPFed/science-on-schema.org/blob/develop/guides/Dataset.md#catalog '\n                                                                                           'puts '\n                                                                                           'identifier '\n                                                                                           'here',\n                                                                            'type': 'string'},\n                                                                    '@type': {'const': 'schema:DataCatalog',\n                                                                              'default': 'schema:DataCatalog',\n                                                                              'type': 'string'},\n                                                                    'schema:identifier': {'$ref': '#/$defs/Identifier',\n                                                                                          'description': 'identifier '\n                                                                                                         'for '\n                                                                                                         'the '\n                                                                                                         'collection '\n                                                                                                         'or '\n                                                                                                         'catalog; '\n                                                                                                         'use '\n                                                                                                         'identifier_type '\n                                                                                                         'to '\n                                                                                                         'provide '\n                                                                                                         'information '\n                                                                                                         'on '\n                                                                                                         'identifier '\n                                                                                                         'scheme '\n                                                                                                         'and '\n                                                                                                         'context '\n                                                                                                         'for '\n                                                                                                         'identifier'},\n                                                                    'schema:name': {'type': 'string'},\n                                                                    'schema:url': {'description': 'locator '\n                                                                                                  'to '\n                                                                                                  'access '\n                                                                                                  'a '\n                                                                                                  'landing '\n                                                                                                  'page '\n                                                                                                  'for '\n                                                                                                  'the '\n                                                                                                  'collection '\n                                                                                                  'or '\n                                                                                                  'catalog',\n                                                                                   'format': 'uri',\n                                                                                   'type': 'string'}},\n                                                     'type': 'object'},\n                    'schema:maintainer': {'anyOf': [{'$ref': '#/$defs/Person'},\n                                                    {'$ref': '#/$defs/Organization'}],\n                                          'description': 'iSamples '\n                                                         'Registrant. '\n                                                         'identification '\n                                                         'of the agent '\n                                                         'that registered '\n                                                         'the sample, with '\n                                                         'contact '\n                                                         'information. '\n                                                         'Should include '\n                                                         'person name and '\n                                                         'affiliation, or '\n                                                         'position name '\n                                                         'and affiliation, '\n                                                         'or just '\n                                                         'organization '\n                                                         'name. e-mail '\n                                                         'address is '\n                                                         'preferred '\n                                                         'contact '\n                                                         'information.'},\n                    'schema:sdDatePublished': {'description': 'date of '\n                                                              'most recent '\n                                                              'update to '\n                                                              'the '\n                                                              'metadata '\n                                                              'content, '\n                                                              'extends '\n                                                              'iSamples '\n                                                              'schema',\n                                               'type': 'string'}},\n     'required': ['schema:about', 'dcterms:conformsTo', '@id'],\n     'type': 'object',\n     'x-jsonld-prefixes': {'dcterms': 'http://purl.org/dc/terms/',\n                           'ex': 'https://example.org/',\n                           'schema': 'http://schema.org/',\n                           'xsd': 'http://www.w3.org/2001/XMLSchema#'}}\n\nOn instance:\n    {'@context': {'dcterms': 'http://purl.org/dc/terms/',\n                  'ex': 'https://example.org/',\n                  'schema': 'http://schema.org/',\n                  'xsd': 'http://www.w3.org/2001/XMLSchema#'},\n     '@id': 'ex:URIforMetadata3575',\n     '@type': 'schema:Dataset',\n     'schema:about': {'@id': 'ex:URIforNode2246'},\n     'schema:includedInDataCatalog': {'@id': 'https://ror.org/04sfkyrt24',\n                                      '@type': 'schema:DataCatalog',\n                                      'schema:identifier': {'@type': 'schema:PropertyValue',\n                                                            'schema:propertyID': 'https://registry.identifiers.org/registry/ror',\n                                                            'schema:url': 'https://ror.org/04sfkyrt24',\n                                                            'schema:value': '04sfkyrt24'},\n                                      'schema:name': 'Global Wildlife '\n                                                     'Aggregator',\n                                      'schema:url': 'http://example.com/wildlifecatalog'},\n     'schema:maintainer': {'@id': 'https://orcid.org/3333-4442-9456-9347',\n                           '@type': 'schema:Person',\n                           'schema:alternateName': 'Metadata curator',\n                           'schema:contactPoint': {'@type': 'schema:ContactPoint',\n                                                   'schema:email': 'goodgea@bwc.org'},\n                           'schema:identifier': {'@type': 'schema:PropertyValue',\n                                                 'schema:propertyID': 'https://registry.identifiers.org/registry/orcid',\n                                                 'schema:url': 'https://orcid.org/3333-4442-9456-9347'},\n                           'schema:name': 'Goodge, Alice'},\n     'schema:sdDatePublished': '2025-10-24'}"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/metaMetadata/rules.shacl",
              "graph": "@prefix cdifd: <https://cdif.org/validation/0.1/shacl#> .\n@prefix dcterms: <http://purl.org/dc/terms/> .\n@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms false ;\n    sh:result [ a sh:ValidationResult ;\n            sh:focusNode <https://example.org/URIforMetadata3575> ;\n            sh:resultMessage \"provide identifiers for specifications used in this record to provide guidance for machine agents processing the metadata record\" ;\n            sh:resultPath dcterms:conformsTo ;\n            sh:resultSeverity sh:Violation ;\n            sh:sourceConstraintComponent sh:MinCountConstraintComponent ;\n            sh:sourceShape cdifd:metadataProfileProperty ] .\n\n",
              "isError": true,
              "message": "Validation result for _sources/properties/metaMetadata/rules.shacl:\n  Validation Report\n  Conforms: False\n  Results (1):\n  Constraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):\n  \tSeverity: sh:Violation\n  \tSource Shape: cdifd:metadataProfileProperty\n  \tFocus Node: ex:URIforMetadata3575\n  \tResult Path: dcterms:conformsTo\n  \tMessage: provide identifiers for specifications used in this record to provide guidance for machine agents processing the metadata record\n  "
            },
            {
              "shaclFile": "_sources/properties/metaMetadata/rules.shacl",
              "focusNodes": {
                "cdifd:CDIFMetaMetadataShape": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/metaMetadata/rules.shacl:\n - Shape cdifd:CDIFMetaMetadataShape: *none*\n"
            },
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/person/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/person/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/person/rules.shacl",
              "focusNodes": {
                "cdifd:contactPointProperty/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFContactPointShape": {
                  "nodes": [
                    "<https://orcid.org/3333-4442-9456-9347>/schema1:contactPoint"
                  ]
                },
                "cdifd:CDIFPersonShape/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:contactPointProperty/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFPersonShape": {
                  "nodes": [
                    "<https://orcid.org/3333-4442-9456-9347>"
                  ]
                },
                "cdifd:affiliationProperty/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFPersonShape/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "cdifd:affiliationProperty/sh:or/rdf:first": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/person/rules.shacl:\n - Shape cdifd:contactPointProperty/sh:or/rdf:rest/rdf:first: *none*\n - Shape cdifd:CDIFContactPointShape: <https://orcid.org/3333-4442-9456-9347>/schema1:contactPoint\n - Shape cdifd:CDIFPersonShape/sh:or/rdf:first: *none*\n - Shape cdifd:contactPointProperty/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFPersonShape: <https://orcid.org/3333-4442-9456-9347>\n - Shape cdifd:affiliationProperty/sh:or/rdf:rest/rdf:first: *none*\n - Shape cdifd:CDIFPersonShape/sh:or/rdf:rest/rdf:first: *none*\n - Shape cdifd:affiliationProperty/sh:or/rdf:first: *none*\n"
            },
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/identifier/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/identifier/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/identifier/rules.shacl",
              "focusNodes": {
                "cdifd:CDIFIdentifierTypeTermShape/sh:property/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierShape/sh:property/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierTypeTermShape": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb20": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb10": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierShape/sh:or/rdf:first": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb22": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb11": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierShape": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb21": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierShape/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb23": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb25": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/identifier/rules.shacl:\n - Shape cdifd:CDIFIdentifierTypeTermShape/sh:property/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFIdentifierShape/sh:property/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFIdentifierTypeTermShape: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb20: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb10: *none*\n - Shape cdifd:CDIFIdentifierShape/sh:or/rdf:first: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb22: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb11: *none*\n - Shape cdifd:CDIFIdentifierShape: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb21: *none*\n - Shape cdifd:CDIFIdentifierShape/sh:or/rdf:rest/rdf:first: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb23: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb25: *none*\n"
            },
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/organization/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/organization/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/organization/rules.shacl",
              "focusNodes": {
                "cdifd:CDIFOrganizationShape/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFOrganizationShape/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFOrganizationShape": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/organization/rules.shacl:\n - Shape cdifd:CDIFOrganizationShape/sh:or/rdf:rest/rdf:first: *none*\n - Shape cdifd:CDIFOrganizationShape/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFOrganizationShape: *none*\n"
            },
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/definedTerm/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/definedTerm/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/definedTerm/rules.shacl",
              "focusNodes": {
                "_:n49180552c5ce47ca89f0d5d3f18f8969b7": {
                  "nodes": []
                },
                "_:n49180552c5ce47ca89f0d5d3f18f8969b4": {
                  "nodes": []
                },
                "cdifd:CDIFDefinedTermShape/sh:property/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFDefinedTermShape": {
                  "nodes": []
                },
                "_:n49180552c5ce47ca89f0d5d3f18f8969b6": {
                  "nodes": []
                },
                "_:n49180552c5ce47ca89f0d5d3f18f8969b5": {
                  "nodes": []
                },
                "_:n49180552c5ce47ca89f0d5d3f18f8969b9": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/definedTerm/rules.shacl:\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b7: *none*\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b4: *none*\n - Shape cdifd:CDIFDefinedTermShape/sh:property/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFDefinedTermShape: *none*\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b6: *none*\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b5: *none*\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b9: *none*\n"
            }
          ]
        }
      ]
    },
    {
      "source": {
        "type": "EXAMPLE",
        "requireFail": false,
        "filename": "build/tests/bbr/test/properties/metaMetadata/example_1_1.json",
        "url": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/tests/bbr/test/properties/metaMetadata/example_1_1.json",
        "exampleIndex": 1,
        "snippetIndex": 1,
        "language": "application/json"
      },
      "result": true,
      "sections": [
        {
          "name": "FILES",
          "title": "Files",
          "entries": [
            {
              "isError": false,
              "message": "Using example_1_1.json from examples"
            },
            {
              "op": "jsonld-uplift",
              "isError": false,
              "message": "JSON-LD context is present - uplifting"
            },
            {
              "op": "jsonld-create",
              "filename": "example_1_1.jsonld",
              "isError": false,
              "message": "Output JSON-LD example_1_1.jsonld created"
            },
            {
              "op": "ttl-create",
              "empty": false,
              "filename": "example_1_1.ttl",
              "size": 36,
              "isError": false,
              "message": "Output Turtle example_1_1.ttl created"
            }
          ]
        },
        {
          "name": "JSON_SCHEMA",
          "title": "JSON Schema",
          "entries": [
            {
              "op": "validation",
              "result": true,
              "isError": false,
              "message": "Validation passed"
            }
          ]
        },
        {
          "name": "SHACL",
          "title": "SHACL",
          "entries": [
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/metaMetadata/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/metaMetadata/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/metaMetadata/rules.shacl",
              "focusNodes": {
                "cdifd:CDIFMetaMetadataShape": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/metaMetadata/rules.shacl:\n - Shape cdifd:CDIFMetaMetadataShape: *none*\n"
            },
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/person/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/person/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/person/rules.shacl",
              "focusNodes": {
                "cdifd:contactPointProperty/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFContactPointShape": {
                  "nodes": [
                    "<https://orcid.org/3333-4442-9456-9347>/schema1:contactPoint"
                  ]
                },
                "cdifd:CDIFPersonShape/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:contactPointProperty/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFPersonShape": {
                  "nodes": [
                    "<https://orcid.org/3333-4442-9456-9347>"
                  ]
                },
                "cdifd:affiliationProperty/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFPersonShape/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "cdifd:affiliationProperty/sh:or/rdf:first": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/person/rules.shacl:\n - Shape cdifd:contactPointProperty/sh:or/rdf:rest/rdf:first: *none*\n - Shape cdifd:CDIFContactPointShape: <https://orcid.org/3333-4442-9456-9347>/schema1:contactPoint\n - Shape cdifd:CDIFPersonShape/sh:or/rdf:first: *none*\n - Shape cdifd:contactPointProperty/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFPersonShape: <https://orcid.org/3333-4442-9456-9347>\n - Shape cdifd:affiliationProperty/sh:or/rdf:rest/rdf:first: *none*\n - Shape cdifd:CDIFPersonShape/sh:or/rdf:rest/rdf:first: *none*\n - Shape cdifd:affiliationProperty/sh:or/rdf:first: *none*\n"
            },
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/identifier/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/identifier/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/identifier/rules.shacl",
              "focusNodes": {
                "cdifd:CDIFIdentifierTypeTermShape/sh:property/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierShape/sh:property/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierTypeTermShape": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb20": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb10": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierShape/sh:or/rdf:first": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb22": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb11": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierShape": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb21": {
                  "nodes": []
                },
                "cdifd:CDIFIdentifierShape/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb23": {
                  "nodes": []
                },
                "_:n761b9bed84c44312a1fc95cf6cffb26bb25": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/identifier/rules.shacl:\n - Shape cdifd:CDIFIdentifierTypeTermShape/sh:property/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFIdentifierShape/sh:property/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFIdentifierTypeTermShape: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb20: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb10: *none*\n - Shape cdifd:CDIFIdentifierShape/sh:or/rdf:first: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb22: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb11: *none*\n - Shape cdifd:CDIFIdentifierShape: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb21: *none*\n - Shape cdifd:CDIFIdentifierShape/sh:or/rdf:rest/rdf:first: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb23: *none*\n - Shape _:n761b9bed84c44312a1fc95cf6cffb26bb25: *none*\n"
            },
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/organization/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/organization/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/organization/rules.shacl",
              "focusNodes": {
                "cdifd:CDIFOrganizationShape/sh:or/rdf:rest/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFOrganizationShape/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFOrganizationShape": {
                  "nodes": [
                    "<https://ror.org/04jpmwt24>"
                  ]
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/organization/rules.shacl:\n - Shape cdifd:CDIFOrganizationShape/sh:or/rdf:rest/rdf:first: *none*\n - Shape cdifd:CDIFOrganizationShape/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFOrganizationShape: <https://ror.org/04jpmwt24>\n"
            },
            {
              "op": "shacl-report",
              "shaclFile": "_sources/properties/definedTerm/rules.shacl",
              "graph": "@prefix sh: <http://www.w3.org/ns/shacl#> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\n[] a sh:ValidationReport ;\n    sh:conforms true .\n\n",
              "isError": false,
              "message": "Validation result for _sources/properties/definedTerm/rules.shacl:\n  Validation Report\n  Conforms: True\n  "
            },
            {
              "shaclFile": "_sources/properties/definedTerm/rules.shacl",
              "focusNodes": {
                "_:n49180552c5ce47ca89f0d5d3f18f8969b7": {
                  "nodes": []
                },
                "_:n49180552c5ce47ca89f0d5d3f18f8969b4": {
                  "nodes": []
                },
                "cdifd:CDIFDefinedTermShape/sh:property/sh:or/rdf:first": {
                  "nodes": []
                },
                "cdifd:CDIFDefinedTermShape": {
                  "nodes": []
                },
                "_:n49180552c5ce47ca89f0d5d3f18f8969b6": {
                  "nodes": []
                },
                "_:n49180552c5ce47ca89f0d5d3f18f8969b5": {
                  "nodes": []
                },
                "_:n49180552c5ce47ca89f0d5d3f18f8969b9": {
                  "nodes": []
                }
              },
              "isError": false,
              "message": "Focus nodes for _sources/properties/definedTerm/rules.shacl:\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b7: *none*\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b4: *none*\n - Shape cdifd:CDIFDefinedTermShape/sh:property/sh:or/rdf:first: *none*\n - Shape cdifd:CDIFDefinedTermShape: *none*\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b6: *none*\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b5: *none*\n - Shape _:n49180552c5ce47ca89f0d5d3f18f8969b9: *none*\n"
            }
          ]
        }
      ]
    }
  ],
  "globalErrors": {},
  "counts": {
    "total": 3,
    "passed": 3,
    "failed": 0
  }
}