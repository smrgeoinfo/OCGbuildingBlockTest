Validation report for ogc.bbr.test.properties.metaMetadata - Meta Metadata
Generated 2025-11-01T02:26:51.014887+00:00
=== General ===
Test was expected to fail and it did.
=== End General ===

=== Files ===
Using conformsto-fail.json from test resources
JSON-LD context is present - uplifting
Output JSON-LD conformsto-fail.jsonld created
Output Turtle conformsto-fail.ttl created
=== End Files ===

=== JSON Schema ===

** Validation error **
ValidationError: 'dcterms:conformsTo' is a required property

Failed validating 'required' in schema:
    {'$defs': {'Identifier': {'$ref': 'https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/identifier/schema.yaml'},
               'Organization': {'$ref': 'https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/organization/schema.yaml'},
               'Person': {'$ref': 'https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/person/schema.yaml'}},
     '$schema': 'https://json-schema.org/draft/2020-12/schema',
     'description': 'see '
                    'https://github.com/Cross-Domain-Interoperability-Framework/Discovery/issues/13 '
                    'for discussion on how to make assertion about the '
                    'sample registration and metadata distinct from '
                    'statements about the physical object',
     'properties': {'@id': {'description': 'identifier for the metadata '
                                           'record',
                            'type': 'string'},
                    '@type': {'const': 'schema:Dataset', 'type': 'string'},
                    'dcterms:conformsTo': {'items': {'properties': {'@id': {'description': 'uri '
                                                                                           'for '
                                                                                           'specifications '
                                                                                           'that '
                                                                                           'this '
                                                                                           'metadata '
                                                                                           'record '
                                                                                           'conforms '
                                                                                           'to. '
                                                                                           'Minimimally '
                                                                                           'should '
                                                                                           'specify '
                                                                                           'uri '
                                                                                           'for '
                                                                                           'CDIF '
                                                                                           'discovery '
                                                                                           'profile',
                                                                            'type': 'string'}},
                                                     'type': 'object'},
                                           'type': 'array'},
                    'schema:about': {'properties': {'@id': {'description': 'this '
                                                                           'must '
                                                                           'be '
                                                                           'the '
                                                                           "'@id' "
                                                                           'value '
                                                                           'of '
                                                                           'the '
                                                                           'node '
                                                                           'containing '
                                                                           'the '
                                                                           'resource '
                                                                           'description '
                                                                           'metadata',
                                                            'type': 'string'}},
                                     'type': 'object'},
                    'schema:includedInDataCatalog': {'description': 'identify '
                                                                    'the '
                                                                    'data '
                                                                    'collection '
                                                                    'or '
                                                                    'repository '
                                                                    'that '
                                                                    'contains '
                                                                    'the '
                                                                    'described '
                                                                    'dataset. '
                                                                    'The '
                                                                    'value '
                                                                    'is '
                                                                    'expected '
                                                                    'to be '
                                                                    'a '
                                                                    'schema:DataCatalog',
                                                     'properties': {'@id': {'description': 'identifier '
                                                                                           'for '
                                                                                           'the '
                                                                                           'containing '
                                                                                           'catalog '
                                                                                           'or '
                                                                                           'repository; '
                                                                                           'example '
                                                                                           'data '
                                                                                           'at '
                                                                                           'https://github.com/ESIPFed/science-on-schema.org/blob/develop/guides/Dataset.md#catalog '
                                                                                           'puts '
                                                                                           'identifier '
                                                                                           'here',
                                                                            'type': 'string'},
                                                                    '@type': {'const': 'schema:DataCatalog',
                                                                              'default': 'schema:DataCatalog',
                                                                              'type': 'string'},
                                                                    'schema:identifier': {'$ref': '#/$defs/Identifier',
                                                                                          'description': 'identifier '
                                                                                                         'for '
                                                                                                         'the '
                                                                                                         'collection '
                                                                                                         'or '
                                                                                                         'catalog; '
                                                                                                         'use '
                                                                                                         'identifier_type '
                                                                                                         'to '
                                                                                                         'provide '
                                                                                                         'information '
                                                                                                         'on '
                                                                                                         'identifier '
                                                                                                         'scheme '
                                                                                                         'and '
                                                                                                         'context '
                                                                                                         'for '
                                                                                                         'identifier'},
                                                                    'schema:name': {'type': 'string'},
                                                                    'schema:url': {'description': 'locator '
                                                                                                  'to '
                                                                                                  'access '
                                                                                                  'a '
                                                                                                  'landing '
                                                                                                  'page '
                                                                                                  'for '
                                                                                                  'the '
                                                                                                  'collection '
                                                                                                  'or '
                                                                                                  'catalog',
                                                                                   'format': 'uri',
                                                                                   'type': 'string'}},
                                                     'type': 'object'},
                    'schema:maintainer': {'anyOf': [{'$ref': '#/$defs/Person'},
                                                    {'$ref': '#/$defs/Organization'}],
                                          'description': 'iSamples '
                                                         'Registrant. '
                                                         'identification '
                                                         'of the agent '
                                                         'that registered '
                                                         'the sample, with '
                                                         'contact '
                                                         'information. '
                                                         'Should include '
                                                         'person name and '
                                                         'affiliation, or '
                                                         'position name '
                                                         'and affiliation, '
                                                         'or just '
                                                         'organization '
                                                         'name. e-mail '
                                                         'address is '
                                                         'preferred '
                                                         'contact '
                                                         'information.'},
                    'schema:sdDatePublished': {'description': 'date of '
                                                              'most recent '
                                                              'update to '
                                                              'the '
                                                              'metadata '
                                                              'content, '
                                                              'extends '
                                                              'iSamples '
                                                              'schema',
                                               'type': 'string'}},
     'required': ['schema:about', 'dcterms:conformsTo', '@id'],
     'type': 'object',
     'x-jsonld-prefixes': {'dcterms': 'http://purl.org/dc/terms/',
                           'ex': 'https://example.org/',
                           'schema': 'http://schema.org/',
                           'xsd': 'http://www.w3.org/2001/XMLSchema#'}}

On instance:
    {'@context': {'dcterms': 'http://purl.org/dc/terms/',
                  'ex': 'https://example.org/',
                  'schema': 'http://schema.org/',
                  'xsd': 'http://www.w3.org/2001/XMLSchema#'},
     '@id': 'ex:URIforMetadata3575',
     '@type': 'schema:Dataset',
     'schema:about': {'@id': 'ex:URIforNode2246'},
     'schema:includedInDataCatalog': {'@id': 'https://ror.org/04sfkyrt24',
                                      '@type': 'schema:DataCatalog',
                                      'schema:identifier': {'@type': 'schema:PropertyValue',
                                                            'schema:propertyID': 'https://registry.identifiers.org/registry/ror',
                                                            'schema:url': 'https://ror.org/04sfkyrt24',
                                                            'schema:value': '04sfkyrt24'},
                                      'schema:name': 'Global Wildlife '
                                                     'Aggregator',
                                      'schema:url': 'http://example.com/wildlifecatalog'},
     'schema:maintainer': {'@id': 'https://orcid.org/3333-4442-9456-9347',
                           '@type': 'schema:Person',
                           'schema:alternateName': 'Metadata curator',
                           'schema:contactPoint': {'@type': 'schema:ContactPoint',
                                                   'schema:email': 'goodgea@bwc.org'},
                           'schema:identifier': {'@type': 'schema:PropertyValue',
                                                 'schema:propertyID': 'https://registry.identifiers.org/registry/orcid',
                                                 'schema:url': 'https://orcid.org/3333-4442-9456-9347'},
                           'schema:name': 'Goodge, Alice'},
     'schema:sdDatePublished': '2025-10-24'}
=== End JSON Schema ===

=== SHACL ===

** Validation error **
Validation result for _sources/properties/metaMetadata/rules.shacl:
  Validation Report
  Conforms: False
  Results (1):
  Constraint Violation in MinCountConstraintComponent (http://www.w3.org/ns/shacl#MinCountConstraintComponent):
  	Severity: sh:Violation
  	Source Shape: cdifd:metadataProfileProperty
  	Focus Node: ex:URIforMetadata3575
  	Result Path: dcterms:conformsTo
  	Message: provide identifiers for specifications used in this record to provide guidance for machine agents processing the metadata record
  
Focus nodes for _sources/properties/metaMetadata/rules.shacl:
 - Shape cdifd:CDIFMetaMetadataShape: *none*

Validation result for _sources/properties/identifier/rules.shacl:
  Validation Report
  Conforms: True
  
Focus nodes for _sources/properties/identifier/rules.shacl:
 - Shape cdifd:CDIFIdentifierShape: *none*
 - Shape _:nc36fcc96e5a649139dc109936bcedca2b26: *none*
 - Shape cdifd:CDIFIdentifierShape/sh:or/rdf:first: *none*
 - Shape _:nc36fcc96e5a649139dc109936bcedca2b24: *none*
 - Shape _:nc36fcc96e5a649139dc109936bcedca2b15: *none*
 - Shape cdifd:CDIFIdentifierTypeTermShape/sh:property/sh:or/rdf:first: *none*
 - Shape _:nc36fcc96e5a649139dc109936bcedca2b25: *none*
 - Shape _:nc36fcc96e5a649139dc109936bcedca2b14: *none*
 - Shape _:nc36fcc96e5a649139dc109936bcedca2b29: *none*
 - Shape _:nc36fcc96e5a649139dc109936bcedca2b27: *none*
 - Shape cdifd:CDIFIdentifierShape/sh:or/rdf:rest/rdf:first: *none*
 - Shape cdifd:CDIFIdentifierShape/sh:property/sh:or/rdf:first: *none*
 - Shape cdifd:CDIFIdentifierTypeTermShape: *none*

Validation result for _sources/properties/person/rules.shacl:
  Validation Report
  Conforms: True
  
Focus nodes for _sources/properties/person/rules.shacl:
 - Shape cdifd:contactPointProperty/sh:or/rdf:rest/rdf:first: *none*
 - Shape cdifd:CDIFPersonShape/sh:or/rdf:first: *none*
 - Shape cdifd:CDIFPersonShape/sh:or/rdf:rest/rdf:first: *none*
 - Shape cdifd:affiliationProperty/sh:or/rdf:first: *none*
 - Shape cdifd:affiliationProperty/sh:or/rdf:rest/rdf:first: *none*
 - Shape cdifd:CDIFPersonShape: <https://orcid.org/3333-4442-9456-9347>
 - Shape cdifd:CDIFContactPointShape: <https://orcid.org/3333-4442-9456-9347>/schema1:contactPoint
 - Shape cdifd:contactPointProperty/sh:or/rdf:first: *none*

Validation result for _sources/properties/organization/rules.shacl:
  Validation Report
  Conforms: True
  
Focus nodes for _sources/properties/organization/rules.shacl:
 - Shape cdifd:CDIFOrganizationShape/sh:or/rdf:rest/rdf:first: *none*
 - Shape cdifd:CDIFOrganizationShape: *none*
 - Shape cdifd:CDIFOrganizationShape/sh:or/rdf:first: *none*

Validation result for _sources/properties/definedTerm/rules.shacl:
  Validation Report
  Conforms: True
  
Focus nodes for _sources/properties/definedTerm/rules.shacl:
 - Shape cdifd:CDIFDefinedTermShape/sh:property/sh:or/rdf:first: *none*
 - Shape _:n4015c521a9e74da09222080a2e567d34b7: *none*
 - Shape _:n4015c521a9e74da09222080a2e567d34b11: *none*
 - Shape _:n4015c521a9e74da09222080a2e567d34b6: *none*
 - Shape _:n4015c521a9e74da09222080a2e567d34b9: *none*
 - Shape cdifd:CDIFDefinedTermShape: *none*
 - Shape _:n4015c521a9e74da09222080a2e567d34b8: *none*

=== End SHACL ===

