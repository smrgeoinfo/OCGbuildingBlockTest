

{
  "itemIdentifier": "ogc.bbr.test.properties.action",
  "$schema": "metaschema.yaml",
  "name": "Action properties",
  "abstract": "Schema defining properties to implement description of an action, a profile of schema.org/Action.",
  "status": "under-development",
  "dateTimeAddition": "2025-10-21T00:00:00Z",
  "itemClass": "schema",
  "register": "cdif-building-block-register",
  "version": "0.1",
  "dateOfLastChange": "2025-11-01",
  "link": "https://github.com/opengeospatial/bblock-template",
  "sources": [
    {
      "title": "schema.org",
      "link": "https://schema.org/Action"
    }
  ],
  "maturity": "draft",
  "scope": "unstable",
  "tags": [
    "templates"
  ],
  "shaclShapes": {
    "ogc.bbr.test.properties.action": [
      "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/action/rules.shacl"
    ],
    "ogc.bbr.test.properties.variableMeasured": [
      "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/variableMeasured/rules.shacl"
    ],
    "ogc.bbr.test.properties.definedTerm": [
      "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/definedTerm/rules.shacl"
    ],
    "ogc.bbr.test.properties.identifier": [
      "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/identifier/rules.shacl"
    ]
  },
  "dependsOn": [
    "ogc.bbr.test.properties.variableMeasured"
  ],
  "ldContext": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/action/context.jsonld",
  "schema": {
    "application/yaml": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/action/schema.yaml",
    "application/json": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/action/schema.json"
  },
  "sourceSchema": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/action/schema.yaml",
  "sourceLdContext": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/action/context.jsonld",
  "sourceFiles": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/_sources/properties/action/",
  "rdfData": [],
  "validationPassed": true,
  "testOutputs": "https://github.com/smrgeoinfo/OCGbuildingBlockTest/blob/master/build/tests/bbr/test/properties/action/",
  "description": "## Person properties\n\nDefines a set of properties for use describing a person for the schema.org implementation of the [Cross Domain Interoperability Framework](https://cross-domain-interoperability-framework.github.io/cdifbook/metadata/schemaorgimplementation.html#implementation-of-metadata-content-items) (CDIF) discovery profile.",
  "examples": [
    {
      "title": "Example Action.",
      "content": "Implementation of schema.org Action as described in blog post at https://schema.org/docs/actions.html, and at https://github.com/schemaorg/suggestions-questions-brainstorming/issues/62)",
      "prefixes": {
        "schema": "http://schema.org/"
      },
      "snippets": [
        {
          "language": "json",
          "ref": "exampleAction.json",
          "code": "{\n    \"@context\": {\n        \"schema\": \"http://schema.org/\",\n        \"ex\": \"https://example.org/\",\n        \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n    },\n    \"@id\": \"ex:exampleAction_37467\",\n    \"@type\": \"schema:Action\",\n    \"schema:name\": \"Download Data\",\n    \"schema:target\": {\n        \"@type\": \"schema:EntryPoint\",\n        \"schema:description\": \"endpoint URL to invoke the action; content type spcifies the supported content type(s) for an EntryPoint response\",\n        \"schema:urlTemplate\": \"http://portal.chordsrt.com/api/v1/data.{encoding}?instruments={instruments}&start={start}&end={end}\",\n        \"schema:httpMethod\": [\"GET\"],\n        \"schema:contentType\": [\n            \"text/csv\",\n            \"application/json\"\n        ]\n    },\n    \"schema:result\": {\n        \"@type\": \"schema:DataDownload\",\n        \"schema:encodingFormat\": [\"text/csv\"],\n        \"schema:description\": \"a description the file format(s) generated by api requests\"\n    },\n    \"schema:object\": {\n        \"@type\": \"schema:DataFeed\",\n        \"schema:description\": \"description of the structure of the api result data\",\n        \"schema:variableMeasured\": [\n            {\n                \"@type\": [\"schema:PropertyValue\"],\n                \"schema:name\": \"temperature\",\n                \"schema:description\": \"temperature of the sample\",\n                \"schema:propertyID\": [\"http://qudt.org/defs/temperature\"]\n            },\n            {\n                \"@id\": \"ex:definedTerm_zZc\",\n                \"@type\": [\"schema:PropertyValue\"],\n                \"schema:name\": \"Viscosity\",\n                \"schema:propertyID\":  [\"http://ogc.org/defs/g35408y\"],\n                \"schema:description\":\"a quantity expressing the magnitude of internal friction\"\n            }\n        ],\n        \"schema:encodingFormat-input\": [\n            \"Lp\",\n            \"CrYPluQBTVSdQa\"\n        ]\n    },\n    \"schema:query-input\": [\n        {\n            \"@id\": \"ex:input_encoding\",\n            \"@type\": \"schema:PropertyValueSpecification\",\n            \"schema:valueName\": \"encoding\",\n            \"schema:description\": \"format of requested result\",\n            \"schema:valueRequired\": false,\n            \"schema:valuePattern\": \"HgfKhFiAHnRPNcqj\"\n        },\n        {\n            \"@id\": \"ex:input_instruments\",\n            \"@type\": \"schema:PropertyValueSpecification\",\n            \"schema:valueName\": \"instruments\",\n            \"schema:description\": \"sensor for data requested\",\n            \"schema:valueRequired\": false,\n            \"schema:valuePattern\": \"WMCHdQeOcsmpjBFn\"\n        },\n        {\n            \"@id\": \"ex:input_start\",\n            \"@type\": \"schema:PropertyValueSpecification\",\n            \"schema:valueName\": \"start\",\n            \"schema:description\": \"beginning of time interval for requested data\",\n            \"schema:valueRequired\": false,\n            \"schema:valuePattern\": \"S\"\n        },\n        {\n            \"@id\": \"ex:input_end\",\n            \"@type\": \"schema:PropertyValueSpecification\",\n            \"schema:valueName\": \"end\",\n            \"schema:description\": \"end of time interval for requested data\",\n            \"schema:valueRequired\": true,\n            \"schema:valuePattern\": \"COollIxtaehmgu\"\n        }\n    ]\n}",
          "url": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/tests/bbr/test/properties/action/example_1_1.json"
        },
        {
          "language": "jsonld",
          "code": "{\n  \"@context\": [\n    {\n      \"schema\": \"http://schema.org/\"\n    },\n    \"https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/action/context.jsonld\",\n    {\n      \"schema\": \"http://schema.org/\",\n      \"ex\": \"https://example.org/\",\n      \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n    }\n  ],\n  \"@id\": \"ex:exampleAction_37467\",\n  \"@type\": \"schema:Action\",\n  \"schema:name\": \"Download Data\",\n  \"schema:target\": {\n    \"@type\": \"schema:EntryPoint\",\n    \"schema:description\": \"endpoint URL to invoke the action; content type spcifies the supported content type(s) for an EntryPoint response\",\n    \"schema:urlTemplate\": \"http://portal.chordsrt.com/api/v1/data.{encoding}?instruments={instruments}&start={start}&end={end}\",\n    \"schema:httpMethod\": [\n      \"GET\"\n    ],\n    \"schema:contentType\": [\n      \"text/csv\",\n      \"application/json\"\n    ]\n  },\n  \"schema:result\": {\n    \"@type\": \"schema:DataDownload\",\n    \"schema:encodingFormat\": [\n      \"text/csv\"\n    ],\n    \"schema:description\": \"a description the file format(s) generated by api requests\"\n  },\n  \"schema:object\": {\n    \"@type\": \"schema:DataFeed\",\n    \"schema:description\": \"description of the structure of the api result data\",\n    \"schema:variableMeasured\": [\n      {\n        \"@type\": [\n          \"schema:PropertyValue\"\n        ],\n        \"schema:name\": \"temperature\",\n        \"schema:description\": \"temperature of the sample\",\n        \"schema:propertyID\": [\n          \"http://qudt.org/defs/temperature\"\n        ]\n      },\n      {\n        \"@id\": \"ex:definedTerm_zZc\",\n        \"@type\": [\n          \"schema:PropertyValue\"\n        ],\n        \"schema:name\": \"Viscosity\",\n        \"schema:propertyID\": [\n          \"http://ogc.org/defs/g35408y\"\n        ],\n        \"schema:description\": \"a quantity expressing the magnitude of internal friction\"\n      }\n    ],\n    \"schema:encodingFormat-input\": [\n      \"Lp\",\n      \"CrYPluQBTVSdQa\"\n    ]\n  },\n  \"schema:query-input\": [\n    {\n      \"@id\": \"ex:input_encoding\",\n      \"@type\": \"schema:PropertyValueSpecification\",\n      \"schema:valueName\": \"encoding\",\n      \"schema:description\": \"format of requested result\",\n      \"schema:valueRequired\": false,\n      \"schema:valuePattern\": \"HgfKhFiAHnRPNcqj\"\n    },\n    {\n      \"@id\": \"ex:input_instruments\",\n      \"@type\": \"schema:PropertyValueSpecification\",\n      \"schema:valueName\": \"instruments\",\n      \"schema:description\": \"sensor for data requested\",\n      \"schema:valueRequired\": false,\n      \"schema:valuePattern\": \"WMCHdQeOcsmpjBFn\"\n    },\n    {\n      \"@id\": \"ex:input_start\",\n      \"@type\": \"schema:PropertyValueSpecification\",\n      \"schema:valueName\": \"start\",\n      \"schema:description\": \"beginning of time interval for requested data\",\n      \"schema:valueRequired\": false,\n      \"schema:valuePattern\": \"S\"\n    },\n    {\n      \"@id\": \"ex:input_end\",\n      \"@type\": \"schema:PropertyValueSpecification\",\n      \"schema:valueName\": \"end\",\n      \"schema:description\": \"end of time interval for requested data\",\n      \"schema:valueRequired\": true,\n      \"schema:valuePattern\": \"COollIxtaehmgu\"\n    }\n  ]\n}",
          "url": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/tests/bbr/test/properties/action/example_1_1.jsonld"
        },
        {
          "language": "ttl",
          "code": "@prefix ex: <https://example.org/> .\n@prefix schema1: <http://schema.org/> .\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\n\nex:exampleAction_37467 a schema1:Action ;\n    schema1:name \"Download Data\" ;\n    schema1:object [ a schema1:DataFeed ;\n            schema1:description \"description of the structure of the api result data\" ;\n            schema1:encodingFormat-input \"CrYPluQBTVSdQa\",\n                \"Lp\" ;\n            schema1:variableMeasured [ a schema1:PropertyValue ;\n                    schema1:description \"temperature of the sample\" ;\n                    schema1:name \"temperature\" ;\n                    schema1:propertyID \"http://qudt.org/defs/temperature\" ],\n                ex:definedTerm_zZc ] ;\n    schema1:query-input ex:input_encoding,\n        ex:input_end,\n        ex:input_instruments,\n        ex:input_start ;\n    schema1:result [ a schema1:DataDownload ;\n            schema1:description \"a description the file format(s) generated by api requests\" ;\n            schema1:encodingFormat \"text/csv\" ] ;\n    schema1:target [ a schema1:EntryPoint ;\n            schema1:contentType \"application/json\",\n                \"text/csv\" ;\n            schema1:description \"endpoint URL to invoke the action; content type spcifies the supported content type(s) for an EntryPoint response\" ;\n            schema1:httpMethod \"GET\" ;\n            schema1:urlTemplate \"http://portal.chordsrt.com/api/v1/data.{encoding}?instruments={instruments}&start={start}&end={end}\" ] .\n\nex:definedTerm_zZc a schema1:PropertyValue ;\n    schema1:description \"a quantity expressing the magnitude of internal friction\" ;\n    schema1:name \"Viscosity\" ;\n    schema1:propertyID \"http://ogc.org/defs/g35408y\" .\n\nex:input_encoding a schema1:PropertyValueSpecification ;\n    schema1:description \"format of requested result\" ;\n    schema1:valueName \"encoding\" ;\n    schema1:valuePattern \"HgfKhFiAHnRPNcqj\" ;\n    schema1:valueRequired false .\n\nex:input_end a schema1:PropertyValueSpecification ;\n    schema1:description \"end of time interval for requested data\" ;\n    schema1:valueName \"end\" ;\n    schema1:valuePattern \"COollIxtaehmgu\" ;\n    schema1:valueRequired true .\n\nex:input_instruments a schema1:PropertyValueSpecification ;\n    schema1:description \"sensor for data requested\" ;\n    schema1:valueName \"instruments\" ;\n    schema1:valuePattern \"WMCHdQeOcsmpjBFn\" ;\n    schema1:valueRequired false .\n\nex:input_start a schema1:PropertyValueSpecification ;\n    schema1:description \"beginning of time interval for requested data\" ;\n    schema1:valueName \"start\" ;\n    schema1:valuePattern \"S\" ;\n    schema1:valueRequired false .\n\n",
          "url": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/tests/bbr/test/properties/action/example_1_1.ttl"
        }
      ]
    }
  ],
  "annotatedSchema": "$schema: https://json-schema.org/draft/2020-12/schema\ntitle: 'Action '\ntype: object\ndescription: 'this element defines an action (operation) that can be invoked via messages\n  using the protocol defined. In most cases this will be an http request via TCP/IP,\n  but in desktop or LAN environments, other protocols might be used. The target property\n  defines the endpoint and syntax for invoking the action. Result specifies the encoding\n  format for the (possible) response(s) when the action is invoked. Object specifies\n  the information model for the resource that is the object of the action. This approach\n  is an adoptation of the Action Blog Post from schema.org (see https://schema.org/docs/actions.html,\n  and https://github.com/schemaorg/suggestions-questions-brainstorming/issues/62) '\nproperties:\n  '@type':\n    type: string\n    description: TBD, recognize other actions, e.g. SearchAction, UpdateAction...,\n      others?\n    default: schema:Action\n    const: schema:Action\n  schema:name:\n    type: string\n    description: text label for the action\n  schema:target:\n    $ref: '#/$defs/target_type'\n    description: specifies the request target location and request syntax\n  schema:result:\n    $ref: '#/$defs/result_type'\n    description: specifies the serialization scheme (encoding format, information\n      model) for expected representation of the data\n  schema:object:\n    $ref: '#/$defs/object_type'\n    description: specification of information model/schema for target resource. Only\n      necessary if the request allow specifying the fields to include in the response\n  schema:query-input:\n    $ref: '#/$defs/query-input_type'\n    description: set of explanations of the parameters in the URL template for the\n      target.\nrequired:\n- schema:name\n- schema:target\n$defs:\n  target_type:\n    type: object\n    description: documentation of the URL end point and syntax to invoke the service.\n      This schema doesn't handle post requests\n    properties:\n      '@type':\n        type: string\n        default: schema:EntryPoint\n        const: schema:EntryPoint\n      schema:description:\n        type: string\n      schema:urlTemplate:\n        type: string\n        description: 'a templated URL; parameters are enclosed in curly braces ({..});\n          parameters are not required. If included, parameters MUST be documented\n          in the query-input element. Template should be consitent with URI Template\n          (https://datatracker.ietf.org/doc/html/rfc6570) examples: - http://portal.chordsrt.com/api/v1/data.{encoding};\n          single parameter - http://portal.chordsrt.com/api/v1/data.{encoding}?instruments={instruments}&start={start}&end={end}\n          ; multiple parameters - {endpoint}{encoding}; endpoint URL path is a parameter,should\n          only appear in potential actions for API specification descriptions, which\n          are generic-not specific to a particular endpoint.'\n      schema:httpMethod:\n        title: HTTP Method\n        description: only applicable if protocol is http or a protocol that tunnels\n          on http\n        type: array\n        items:\n          type: string\n          default: GET\n          enum:\n          - GET\n          - PUT\n          - POST\n          - PATCH\n          - DELETE\n          - COPY\n          - HEAD\n          - OPTIONS\n          - PROPFIND\n      schema:contentType:\n        type: array\n        description: The supported content type(s) for an EntryPoint response. a MIME\n          type (https://www.iana.org/assignments/media-types/media-types.xhtml) that\n          specifies the content type for messages in resonses from the service endpoint.\n          This is a schema.org property, and is redundant with encodingFormat in the\n          result property for the Action.\n        items:\n          type: string\n    required:\n    - schema:urlTemplate\n  result_type:\n    type: object\n    description: documentation of the serialization format for the API response, i.e.\n      an implementation of the structure specified in the object type field\n    properties:\n      '@type':\n        type: string\n        default: schema:DataDownload\n      schema:encodingFormat:\n        type: array\n        items:\n          type: string\n      schema:description:\n        type: string\n  query-input_type:\n    type: array\n    description: object that maps the parameters (in braces {  } in the url template\n      to specifications for the kind of value expected. parameters must all be strings\n      in the URL\n    minItems: 0\n    items:\n      type: object\n      properties:\n        '@id':\n          type: string\n        '@type':\n          type: string\n          default: schema:PropertyValueSpecification\n          const: schema:PropertyValueSpecification\n        schema:valueName:\n          type: string\n        schema:description:\n          type: string\n        schema:valueRequired:\n          type: boolean\n          default: true\n        schema:valuePattern:\n          type: string\n      required:\n      - schema:valueName\n      - schema:description\n  object_type:\n    type: object\n    description: description of the data structure of the return object\n    properties:\n      '@type':\n        type: string\n        default: schema:DataFeed\n        const: schema:DataFeed\n      schema:description:\n        type: string\n      schema:variableMeasured:\n        type: array\n        items:\n          $ref: '#/$defs/VariableMeasured'\n  VariableMeasured:\n    $ref: https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/variableMeasured/schema.yaml\nx-jsonld-prefixes:\n  schema: http://schema.org/\n",
  "gitRepository": "https://github.com/smrgeoinfo/OCGbuildingBlockTest",
  "gitPath": "_sources/properties/action"
}