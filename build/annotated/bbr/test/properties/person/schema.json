{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "My example schema",
  "type": "object",
  "properties": {
    "@id": {
      "type": "string"
    },
    "@type": {
      "type": "string",
      "const": "schema:Person"
    },
    "schema:name": {
      "type": "string",
      "description": "string label for person that is meaningful for human users"
    },
    "schema:description": {
      "type": "string"
    },
    "schema:identifier": {
      "description": "identifier for person",
      "anyOf": [
        {
          "$ref": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/identifier/schema.json"
        },
        {
          "type": "string"
        }
      ]
    },
    "schema:alternateName": {
      "type": "string",
      "description": "other labels by which the person might be known"
    },
    "schema:affiliation": {
      "$ref": "https://smrgeoinfo.github.io/OCGbuildingBlockTest/build/annotated/bbr/test/properties/organization/schema.json",
      "description": "if affiliation is present, value must be a schema:Organization."
    },
    "schema:contactPoint": {
      "type": "object",
      "properties": {
        "@type": {
          "const": "schema:ContactPoint"
        },
        "schema:email": {
          "type": "string"
        }
      },
      "description": "restrict to email only. Schema.org allows telephone and postal contacts as well"
    },
    "schema:sameAs": {
      "type": "array",
      "description": "other identifiers for the person",
      "items": {
        "type": "string"
      }
    }
  },
  "allOf": [
    {
      "required": [
        "@type"
      ]
    },
    {
      "anyOf": [
        {
          "required": [
            "schema:name"
          ]
        },
        {
          "required": [
            "schema:identifier"
          ]
        }
      ]
    }
  ],
  "x-jsonld-prefixes": {
    "schema": "http://schema.org/"
  }
}